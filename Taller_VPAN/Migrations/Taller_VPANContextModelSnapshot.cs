// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taller_VPAN.Data;

#nullable disable

namespace Taller_VPAN.Migrations
{
    [DbContext(typeof(Taller_VPANContext))]
    partial class Taller_VPANContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Taller_VPAN.Models.Auto", b =>
                {
                    b.Property<int>("IdA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdA"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMotor")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotorIdMotor")
                        .HasColumnType("int");

                    b.Property<int>("NumPuertas")
                        .HasColumnType("int");

                    b.HasKey("IdA");

                    b.HasIndex("MotorIdMotor");

                    b.ToTable("Auto");
                });

            modelBuilder.Entity("Taller_VPAN.Models.Motor", b =>
                {
                    b.Property<int>("IdMotor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMotor"));

                    b.Property<int>("AnioFabricacion")
                        .HasColumnType("int");

                    b.Property<int>("CaballosFuerza")
                        .HasColumnType("int");

                    b.Property<string>("TipoMotor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMotor");

                    b.ToTable("Motor");
                });

            modelBuilder.Entity("Taller_VPAN.Models.Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AutoIdA")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsEcuatoriano")
                        .HasColumnType("bit");

                    b.Property<int>("FechaNacimiento")
                        .HasColumnType("int");

                    b.Property<int>("IdA")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutoIdA");

                    b.ToTable("Propietario");
                });

            modelBuilder.Entity("Taller_VPAN.Models.Auto", b =>
                {
                    b.HasOne("Taller_VPAN.Models.Motor", "Motor")
                        .WithMany()
                        .HasForeignKey("MotorIdMotor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motor");
                });

            modelBuilder.Entity("Taller_VPAN.Models.Propietario", b =>
                {
                    b.HasOne("Taller_VPAN.Models.Auto", "Auto")
                        .WithMany()
                        .HasForeignKey("AutoIdA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auto");
                });
#pragma warning restore 612, 618
        }
    }
}
